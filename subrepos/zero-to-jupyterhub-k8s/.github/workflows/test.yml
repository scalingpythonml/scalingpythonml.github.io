# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
#
name: Test

# Trigger the workflow's on all PRs and pushes so that other contributors can
# run tests in their own forks.
on:
  pull_request:
  push:
  workflow_dispatch:

defaults:
  run:
    # Declare bash be used by default in this workflow's "run" steps.
    #
    # NOTE: bash will by default run with:
    #   --noprofile: Ignore ~/.profile etc.
    #   --norc:      Ignore ~/.bashrc etc.
    #   -e:          Exit directly on errors
    #   -o pipefail: Don't mask errors from a command piped into another command
    shell: bash

jobs:
  chart_lint_and_validate:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - uses: pre-commit/action@v2.0.0

      - name: Install dependencies
        run: |
          . ci/common
          setup_helm
          KUBEVAL_VERSION=0.15.0 setup_kubeval
          pip install yamllint

      - name: Lint and validate
        # NOTE: Kubernetes resource validation can only be done against
        #       Kubernetes versions with schemas available in:
        #       https://github.com/instrumenta/kubernetes-json-schema
        #
        # NOTE: The "helm template" command will evaluate
        #       .Capabilities.APIVersion.Has in templates based on a Kubernetes
        #       version associated with the helm binary's version. Since we
        #       render the templates with a specific helm version, we end up
        #       rendering templates using a mocked k8s version unrelated to the
        #       Kubernetes version we want to validate against. This issue has
        #       made us not validate against versions lower than 1.14.
        run: tools/templates/lint-and-validate.py --kubernetes-versions 1.14.0,1.18.0


  chart_test:
    runs-on: ubuntu-20.04
    timeout-minutes: 20

    strategy:
      # Keep running even if one variation of the job fail
      fail-fast: false
      matrix:
        # We run this job multiple times with different parameterization
        # specified below, these parameters have no meaning on their own and
        # gain meaning on how job steps use them.
        #
        # k3s-version: https://github.com/rancher/k3s/tags
        include:
          - k3s-version: v1.19.3+k3s2
            test: install
          - k3s-version: v1.18.10+k3s2
            test: install
          - k3s-version: v1.17.13+k3s2
            test: install
          - k3s-version: v1.16.15+k3s1
            test: install

          - k3s-version: v1.19.3+k3s1
            test: upgrade

    steps:
      - uses: actions/checkout@v2
        with:
          # chartpress requires the full history
          fetch-depth: 0

      # Starts a k8s cluster with NetworkPolicy enforcement and installs both
      # kubectl and helm
      #
      # ref: https://github.com/jupyterhub/action-k3s-helm/
      - uses: jupyterhub/action-k3s-helm@main
        with:
          k3s-version: ${{ matrix.k3s-version }}
          helm-version: v3.4.1
          metrics-enabled: false
          traefik-enabled: false
          docker-enabled: true

      # NOTE: actions/setup-python@v2 make use of a cache within the GitHub base
      #       environment and setup in a fraction of a second.
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install and run chartpress
        run: |
          . ./ci/common
          install_and_run_chartpress_and_pebble

      - name: Install latest JupyterHub version from Helm chart repo
        if: matrix.test == 'upgrade'
        run: |
          . ./ci/common
          helm install jupyterhub jupyterhub/jupyterhub --values dev-config.yaml
          await_jupyterhub
          await_autohttps_tls_cert_acquisition
          await_autohttps_tls_cert_save

      - name: Install JupyterHub dev chart
        run: |
          . ./ci/common
          helm upgrade --install jupyterhub ./jupyterhub --values dev-config.yaml
          await_jupyterhub
          await_autohttps_tls_cert_acquisition

      - name: Run tests
        run: |
          . ./ci/common
          # If you have problems with the tests add '--capture=no' to show stdout
          pytest --verbose --exitfirst --color=yes ./tests

      - name: Provide info on failures
        if: failure()
        run: |
          . ./ci/common
          full_namespace_report


  docs_linkcheck:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install deps
        run: pip install --no-cache-dir -r doc/doc-requirements.txt

      - name: Build and run linkcheck
        run: |
          cd doc
          make html SPHINXOPTS='-W --keep-going'
          make linkcheck
        # Make the job not fail if this step fail. The GitHub UI will due to
        # this signal the job to be green even though it has failures though, so
        # manual inspection is needed at the moment. A related ticket to improve
        # this is open.
        #
        # ref: https://github.com/actions/toolkit/issues/399
        continue-on-error: true
